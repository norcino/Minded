pool:
  name: Azure Pipelines
  vmImage: 'ubuntu-latest'
    
steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Pack'
  inputs:
    command: 'custom'    
    custom: 'pack'
    packagesToPack: '**/Minded.Extensions.*.csproj;**/Minded.Framework.*.csproj;!**/*.Tests.csproj'
    arguments: '--version-suffix rc.$(Rev:.r) --include-symbols --include-source --configuration $(BuildConfiguration)'

- task: NuGetCommand@2
  displayName: 'NuGet Push Minded Feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '781d4237-b045-4959-bd79-25174518b8d8/b371f2d0-81c8-46d0-b653-f90e65088279'
    allowPackageConflicts: true

- task: DotNetCoreCLI@2
  displayName: 'NuGet Push Packages'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    command: custom
    custom: nuget
    arguments: 'push $(Build.ArtifactStagingDirectory)/*.nupkg -s https://api.nuget.org/v3/index.json -k $(NugetApiKey)'

- task: DotNetCoreCLI@2
  displayName: 'NuGet Push Symbols'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    command: custom
    custom: nuget
    arguments: 'push $(Build.ArtifactStagingDirectory)/*.snupkg -s https://api.nuget.org/v3/index.json -k $(NugetApiKey)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True
  enabled: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  enabled: false
  condition: succeededOrFailed()
